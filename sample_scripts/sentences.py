import chromadb
from sentence_transformers import SentenceTransformer
import uuid

# 1. Setup: ChromaDB & Embedding-Modell
client = chromadb.Client()
collection = client.get_or_create_collection("test_saetze")

model = SentenceTransformer("sentence-transformers/all-MiniLM-L6-v2")

# 2. Beispiel-S√§tze definieren
s√§tze = [
    "Die K√ºndigung ist nur zum Monatsende m√∂glich.",
    "Man darf den Vertrag jeweils zum Quartal beenden.",
    "Der Vertrag endet automatisch nach einem Jahr.",
    "Ein R√ºcktritt ist nur schriftlich g√ºltig.",
    "Vertr√§ge k√∂nnen jederzeit mit einer Frist von vier Wochen gek√ºndigt werden."
]

# 3. Embeddings erzeugen & einf√ºgen
embeddings = model.encode(s√§tze)

for satz, emb in zip(s√§tze, embeddings):
    collection.add(
        documents=[satz],
        embeddings=[emb.tolist()],
        ids=[str(uuid.uuid4())],
        metadatas=[{"info": "Beispiel"}]
    )

# 4. Suchanfrage definieren
query = "Wie lange ist die K√ºndigungsfrist?"

# 5. Embedding f√ºr die Anfrage erzeugen
query_embedding = model.encode([query])[0].tolist()

# 6. Suche durchf√ºhren
results = collection.query(
    query_embeddings=[query_embedding],
    n_results=3
)

# 7. Ergebnisse ausgeben
print("\nüîç √Ñhnliche S√§tze zur Anfrage:")
for doc, dist in zip(results["documents"][0], results["distances"][0]):
    print(f" - {doc} (Distanz: {dist:.4f})")

